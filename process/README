针对php的pcntl_fork的一些浅显研究

pcntl_fork() 执行一次, 返回两次

原因是, fork出与父进程一模一样的子进程出来, 然后在fork处, 子进程执行同样的代码

父子进程的不同点在于pcntl_fork的返回值不一样, 父返回值是fork子进程的pid, 子进程执行到这一步的时候, 返回值是0

至于demo里面变量$exit的值, 在于研究子进程执行完之后, 退不退出的不同. 如果退出, 则子进程不再去执行for循环, 如果不退出, 子进程需要执行for循环

输出结果如下:
